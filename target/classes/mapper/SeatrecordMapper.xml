<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airline.dao.SeatrecordMapper">
  <resultMap id="BaseResultMap" type="com.airline.bean.Seatrecord">
    <id column="seatRecordId" jdbcType="INTEGER" property="seatrecordid" />
    <result column="flightId" jdbcType="VARCHAR" property="flightid" />
    <result column="availFirst" jdbcType="INTEGER" property="availfirst" />
    <result column="availBusiness" jdbcType="INTEGER" property="availbusiness" />
    <result column="availEconomyl" jdbcType="INTEGER" property="availeconomyl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seatRecordId, flightId, availFirst, availBusiness, availEconomyl
  </sql>
  <select id="selectByExample" parameterType="com.airline.bean.SeatrecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seatrecord
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seatrecord
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airline.bean.SeatrecordExample">
    delete from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airline.bean.Seatrecord">
    insert into seatrecord (seatRecordId, flightId, availFirst, 
      availBusiness, availEconomyl)
    values (#{seatrecordid,jdbcType=INTEGER}, #{flightid,jdbcType=VARCHAR}, #{availfirst,jdbcType=INTEGER}, 
      #{availbusiness,jdbcType=INTEGER}, #{availeconomyl,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.airline.bean.Seatrecord">
    insert into seatrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seatrecordid != null">
        seatRecordId,
      </if>
      <if test="flightid != null">
        flightId,
      </if>
      <if test="availfirst != null">
        availFirst,
      </if>
      <if test="availbusiness != null">
        availBusiness,
      </if>
      <if test="availeconomyl != null">
        availEconomyl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seatrecordid != null">
        #{seatrecordid,jdbcType=INTEGER},
      </if>
      <if test="flightid != null">
        #{flightid,jdbcType=VARCHAR},
      </if>
      <if test="availfirst != null">
        #{availfirst,jdbcType=INTEGER},
      </if>
      <if test="availbusiness != null">
        #{availbusiness,jdbcType=INTEGER},
      </if>
      <if test="availeconomyl != null">
        #{availeconomyl,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airline.bean.SeatrecordExample" resultType="java.lang.Long">
    select count(*) from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seatrecord
    <set>
      <if test="record.seatrecordid != null">
        seatRecordId = #{record.seatrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.flightid != null">
        flightId = #{record.flightid,jdbcType=VARCHAR},
      </if>
      <if test="record.availfirst != null">
        availFirst = #{record.availfirst,jdbcType=INTEGER},
      </if>
      <if test="record.availbusiness != null">
        availBusiness = #{record.availbusiness,jdbcType=INTEGER},
      </if>
      <if test="record.availeconomyl != null">
        availEconomyl = #{record.availeconomyl,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seatrecord
    set seatRecordId = #{record.seatrecordid,jdbcType=INTEGER},
      flightId = #{record.flightid,jdbcType=VARCHAR},
      availFirst = #{record.availfirst,jdbcType=INTEGER},
      availBusiness = #{record.availbusiness,jdbcType=INTEGER},
      availEconomyl = #{record.availeconomyl,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airline.bean.Seatrecord">
    update seatrecord
    <set>
      <if test="flightid != null">
        flightId = #{flightid,jdbcType=VARCHAR},
      </if>
      <if test="availfirst != null">
        availFirst = #{availfirst,jdbcType=INTEGER},
      </if>
      <if test="availbusiness != null">
        availBusiness = #{availbusiness,jdbcType=INTEGER},
      </if>
      <if test="availeconomyl != null">
        availEconomyl = #{availeconomyl,jdbcType=INTEGER},
      </if>
    </set>
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airline.bean.Seatrecord">
    update seatrecord
    set flightId = #{flightid,jdbcType=VARCHAR},
      availFirst = #{availfirst,jdbcType=INTEGER},
      availBusiness = #{availbusiness,jdbcType=INTEGER},
      availEconomyl = #{availeconomyl,jdbcType=INTEGER}
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </update>
</mapper>