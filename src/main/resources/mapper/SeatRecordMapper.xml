<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airline.dao.SeatRecordMapper">
  <resultMap id="BaseResultMap" type="com.airline.bean.SeatRecord">
    <id column="seatRecordId" jdbcType="INTEGER" property="seatrecordid" />
    <result column="flightId" jdbcType="VARCHAR" property="flightid" />
    <result column="bookedFirst" jdbcType="INTEGER" property="bookedfirst" />
    <result column="bookedBusiness" jdbcType="INTEGER" property="bookedbusiness" />
    <result column="bookedEconomic" jdbcType="INTEGER" property="bookedeconomic" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="planeId" jdbcType="INTEGER" property="planeid" />
  </resultMap>
  
  <resultMap id="ResultMapWithPlane" type="com.airline.bean.SeatRecord">
    <id column="seatRecordId" jdbcType="INTEGER" property="seatrecordid" />
    <result column="flightId" jdbcType="VARCHAR" property="flightid" />
    <result column="bookedFirst" jdbcType="INTEGER" property="bookedfirst" />
    <result column="bookedBusiness" jdbcType="INTEGER" property="bookedbusiness" />
    <result column="bookedEconomic" jdbcType="INTEGER" property="bookedeconomic" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="planeId" jdbcType="INTEGER" property="planeid" />
    <association property="plane" javaType="com.airline.bean.Plane">
    	<id column="planeId" property="planeid"/>
    	<result column="manufacturer" property="manufacturer"/>
    	<result column="model" property="model"/>
    	<result column="numOfFirstClass" property="numoffirstclass"/>
    	<result column="numOfBusinessClass" property="numofbusinessclass"/>
    	<result column="numOfEconomyClass" property="numofeconomyclass"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seatRecordId, flightId, bookedFirst, bookedBusiness, bookedEconomic, date, planeId
  </sql>
  <select id="selectByExample" parameterType="com.airline.bean.SeatRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seatrecord
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithPlane" parameterType="com.airline.bean.SeatRecordExample" resultMap="ResultMapWithPlane" 
  >
    select
    <if test="distinct">
      distinct
    </if>
    s.seatRecordId, s.flightId, s.bookedFirst, s.bookedBusiness, s.bookedEconomic, s.date, s.planeId, 
 	p.planeId, p.manufacturer, p.model, p.numOfFirstClass, p.numOfBusinessClass, p.numOfEconomyClass 
    FROM seatrecord s LEFT JOIN plane p ON s.planeId = p.planeId 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seatrecord
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airline.bean.SeatRecordExample">
    delete from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airline.bean.SeatRecord">
    insert into seatrecord (seatRecordId, flightId, bookedFirst, 
      bookedBusiness, bookedEconomic, date, 
      planeId)
    values (#{seatrecordid,jdbcType=INTEGER}, #{flightid,jdbcType=VARCHAR}, #{bookedfirst,jdbcType=INTEGER}, 
      #{bookedbusiness,jdbcType=INTEGER}, #{bookedeconomic,jdbcType=INTEGER}, #{date,jdbcType=DATE}, 
      #{planeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.airline.bean.SeatRecord">
    insert into seatrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seatrecordid != null">
        seatRecordId,
      </if>
      <if test="flightid != null">
        flightId,
      </if>
      <if test="bookedfirst != null">
        bookedFirst,
      </if>
      <if test="bookedbusiness != null">
        bookedBusiness,
      </if>
      <if test="bookedeconomic != null">
        bookedEconomic,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="planeid != null">
        planeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seatrecordid != null">
        #{seatrecordid,jdbcType=INTEGER},
      </if>
      <if test="flightid != null">
        #{flightid,jdbcType=VARCHAR},
      </if>
      <if test="bookedfirst != null">
        #{bookedfirst,jdbcType=INTEGER},
      </if>
      <if test="bookedbusiness != null">
        #{bookedbusiness,jdbcType=INTEGER},
      </if>
      <if test="bookedeconomic != null">
        #{bookedeconomic,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="planeid != null">
        #{planeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airline.bean.SeatRecordExample" resultType="java.lang.Long">
    select count(*) from seatrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seatrecord
    <set>
      <if test="record.seatrecordid != null">
        seatRecordId = #{record.seatrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.flightid != null">
        flightId = #{record.flightid,jdbcType=VARCHAR},
      </if>
      <if test="record.bookedfirst != null">
        bookedFirst = #{record.bookedfirst,jdbcType=INTEGER},
      </if>
      <if test="record.bookedbusiness != null">
        bookedBusiness = #{record.bookedbusiness,jdbcType=INTEGER},
      </if>
      <if test="record.bookedeconomic != null">
        bookedEconomic = #{record.bookedeconomic,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.planeid != null">
        planeId = #{record.planeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seatrecord
    set seatRecordId = #{record.seatrecordid,jdbcType=INTEGER},
      flightId = #{record.flightid,jdbcType=VARCHAR},
      bookedFirst = #{record.bookedfirst,jdbcType=INTEGER},
      bookedBusiness = #{record.bookedbusiness,jdbcType=INTEGER},
      bookedEconomic = #{record.bookedeconomic,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      planeId = #{record.planeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airline.bean.SeatRecord">
    update seatrecord
    <set>
      <if test="flightid != null">
        flightId = #{flightid,jdbcType=VARCHAR},
      </if>
      <if test="bookedfirst != null">
        bookedFirst = #{bookedfirst,jdbcType=INTEGER},
      </if>
      <if test="bookedbusiness != null">
        bookedBusiness = #{bookedbusiness,jdbcType=INTEGER},
      </if>
      <if test="bookedeconomic != null">
        bookedEconomic = #{bookedeconomic,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="planeid != null">
        planeId = #{planeid,jdbcType=INTEGER},
      </if>
    </set>
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airline.bean.SeatRecord">
    update seatrecord
    set flightId = #{flightid,jdbcType=VARCHAR},
      bookedFirst = #{bookedfirst,jdbcType=INTEGER},
      bookedBusiness = #{bookedbusiness,jdbcType=INTEGER},
      bookedEconomic = #{bookedeconomic,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      planeId = #{planeid,jdbcType=INTEGER}
    where seatRecordId = #{seatrecordid,jdbcType=INTEGER}
  </update>
</mapper>