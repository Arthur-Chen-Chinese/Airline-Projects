<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airline.dao.PlaneMapper">
  <resultMap id="BaseResultMap" type="com.airline.bean.Plane">
    <id column="planeId" jdbcType="INTEGER" property="planeid" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="numOfFirstClass" jdbcType="INTEGER" property="numoffirstclass" />
    <result column="numOfBusinessClass" jdbcType="INTEGER" property="numofbusinessclass" />
    <result column="numOfEconomyClass" jdbcType="INTEGER" property="numofeconomyclass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    planeId, manufacturer, numOfFirstClass, numOfBusinessClass, numOfEconomyClass
  </sql>
  <select id="selectByExample" parameterType="com.airline.bean.PlaneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from plane
    where planeId = #{planeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from plane
    where planeId = #{planeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airline.bean.PlaneExample">
    delete from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airline.bean.Plane">
    insert into plane (planeId, manufacturer, numOfFirstClass, 
      numOfBusinessClass, numOfEconomyClass)
    values (#{planeid,jdbcType=INTEGER}, #{manufacturer,jdbcType=VARCHAR}, #{numoffirstclass,jdbcType=INTEGER}, 
      #{numofbusinessclass,jdbcType=INTEGER}, #{numofeconomyclass,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.airline.bean.Plane">
    insert into plane
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planeid != null">
        planeId,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="numoffirstclass != null">
        numOfFirstClass,
      </if>
      <if test="numofbusinessclass != null">
        numOfBusinessClass,
      </if>
      <if test="numofeconomyclass != null">
        numOfEconomyClass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planeid != null">
        #{planeid,jdbcType=INTEGER},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="numoffirstclass != null">
        #{numoffirstclass,jdbcType=INTEGER},
      </if>
      <if test="numofbusinessclass != null">
        #{numofbusinessclass,jdbcType=INTEGER},
      </if>
      <if test="numofeconomyclass != null">
        #{numofeconomyclass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airline.bean.PlaneExample" resultType="java.lang.Long">
    select count(*) from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update plane
    <set>
      <if test="record.planeid != null">
        planeId = #{record.planeid,jdbcType=INTEGER},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.numoffirstclass != null">
        numOfFirstClass = #{record.numoffirstclass,jdbcType=INTEGER},
      </if>
      <if test="record.numofbusinessclass != null">
        numOfBusinessClass = #{record.numofbusinessclass,jdbcType=INTEGER},
      </if>
      <if test="record.numofeconomyclass != null">
        numOfEconomyClass = #{record.numofeconomyclass,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update plane
    set planeId = #{record.planeid,jdbcType=INTEGER},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      numOfFirstClass = #{record.numoffirstclass,jdbcType=INTEGER},
      numOfBusinessClass = #{record.numofbusinessclass,jdbcType=INTEGER},
      numOfEconomyClass = #{record.numofeconomyclass,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airline.bean.Plane">
    update plane
    <set>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="numoffirstclass != null">
        numOfFirstClass = #{numoffirstclass,jdbcType=INTEGER},
      </if>
      <if test="numofbusinessclass != null">
        numOfBusinessClass = #{numofbusinessclass,jdbcType=INTEGER},
      </if>
      <if test="numofeconomyclass != null">
        numOfEconomyClass = #{numofeconomyclass,jdbcType=INTEGER},
      </if>
    </set>
    where planeId = #{planeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airline.bean.Plane">
    update plane
    set manufacturer = #{manufacturer,jdbcType=VARCHAR},
      numOfFirstClass = #{numoffirstclass,jdbcType=INTEGER},
      numOfBusinessClass = #{numofbusinessclass,jdbcType=INTEGER},
      numOfEconomyClass = #{numofeconomyclass,jdbcType=INTEGER}
    where planeId = #{planeid,jdbcType=INTEGER}
  </update>
</mapper>