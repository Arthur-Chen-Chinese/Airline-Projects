<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.airline.dao.PaymentrecordMapper">
  <resultMap id="BaseResultMap" type="com.airline.bean.Paymentrecord">
    <id column="paymentId" jdbcType="INTEGER" property="paymentid" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
      <result column="date" jdbcType="DATE" property="date"/>
      <result column="paymentType" jdbcType="INTEGER" property="paymenttype"/>
      <result column="thirtyPartyPaymentId" jdbcType="VARCHAR" property="thirtypartypaymentid"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    paymentId, amount, status, date, paymentType, thirtyPartyPaymentId
  </sql>
  <select id="selectByExample" parameterType="com.airline.bean.PaymentrecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paymentrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paymentrecord
    where paymentId = #{paymentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paymentrecord
    where paymentId = #{paymentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.airline.bean.PaymentrecordExample">
    delete from paymentrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.airline.bean.Paymentrecord">
    insert into paymentrecord (paymentId, amount, status, 
      date, paymentType, thirtyPartyPaymentId
      )
    values (#{paymentid,jdbcType=INTEGER}, #{amount,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE}, #{paymenttype,jdbcType=INTEGER}, #{thirtypartypaymentid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.airline.bean.Paymentrecord">
    insert into paymentrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentid != null">
        paymentId,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
        <if test="date != null">
            date,
        </if>
        <if test="paymenttype != null">
            paymentType,
        </if>
        <if test="thirtypartypaymentid != null">
            thirtyPartyPaymentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentid != null">
        #{paymentid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
        <if test="date != null">
            #{date,jdbcType=DATE},
        </if>
        <if test="paymenttype != null">
            #{paymenttype,jdbcType=INTEGER},
        </if>
        <if test="thirtypartypaymentid != null">
            #{thirtypartypaymentid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.airline.bean.PaymentrecordExample" resultType="java.lang.Long">
    select count(*) from paymentrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update paymentrecord
    <set>
      <if test="record.paymentid != null">
        paymentId = #{record.paymentid,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
        <if test="record.date != null">
            date = #{record.date,jdbcType=DATE},
        </if>
        <if test="record.paymenttype != null">
            paymentType = #{record.paymenttype,jdbcType=INTEGER},
        </if>
        <if test="record.thirtypartypaymentid != null">
            thirtyPartyPaymentId = #{record.thirtypartypaymentid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update paymentrecord
    set paymentId = #{record.paymentid,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      paymentType = #{record.paymenttype,jdbcType=INTEGER},
      thirtyPartyPaymentId = #{record.thirtypartypaymentid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.airline.bean.Paymentrecord">
    update paymentrecord
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
        <if test="date != null">
            date = #{date,jdbcType=DATE},
        </if>
        <if test="paymenttype != null">
            paymentType = #{paymenttype,jdbcType=INTEGER},
        </if>
        <if test="thirtypartypaymentid != null">
            thirtyPartyPaymentId = #{thirtypartypaymentid,jdbcType=VARCHAR},
      </if>
    </set>
    where paymentId = #{paymentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.airline.bean.Paymentrecord">
    update paymentrecord
    set amount = #{amount,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      paymentType = #{paymenttype,jdbcType=INTEGER},
      thirtyPartyPaymentId = #{thirtypartypaymentid,jdbcType=VARCHAR}
    where paymentId = #{paymentid,jdbcType=INTEGER}
  </update>
</mapper>